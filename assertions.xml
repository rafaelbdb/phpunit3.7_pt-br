<?xml version="1.0" encoding="utf-8" ?>

<appendix id="appendixes.assertions">
  <title>Assertions</title>

  <para>
    <xref linkend="appendixes.assertions.tables.assertions" /> mostra todas as variedades de asserções.
  </para>

  <table id="appendixes.assertions.tables.assertions">
    <title>Assertions</title>

    <tgroup cols="1" align="left" colsep="1" rowsep="1">
      <thead>
        <row>
          <entry>Assertion</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <indexterm><primary>assertArrayHasKey()</primary></indexterm>
          <entry><literal>assertArrayHasKey($chave, $vetor, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertArrayNotHasKey()</primary></indexterm>
          <entry><literal>assertArrayNotHasKey($chave, $vetor, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContains()</primary></indexterm>
          <entry><literal>assertAttributeContains($agulha, $nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '', $ignorarCaixa = FALSE, $verificarIdentidadeDoObjeto = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeContainsOnly($tipo, $nomeAtributoBateria, $classeOuObjetoBateria, $ehTipoNativo = NULL, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeCount()</primary></indexterm>
          <entry><literal>assertAttributeCount($contagemEsperada, $nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEmpty()</primary></indexterm>
          <entry><literal>assertAttributeEmpty($nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEquals()</primary></indexterm>
          <entry><literal>assertAttributeEquals($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '', $delta = 0, $profMax = 10, $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThan()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThan($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThanOrEqual($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeInstanceOf($esperado, $nomeAtributo, $classeOuObjeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInternalType()</primary></indexterm>
          <entry><literal>assertAttributeInternalType($esperado, $nomeAtributo, $classeOuObjeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThan()</primary></indexterm>
          <entry><literal>assertAttributeLessThan($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeLessThanOrEqual($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContains()</primary></indexterm>
          <entry><literal>assertAttributeNotContains($agulha, $nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '', $ignorarCaixa = FALSE, $verificarIdentidadeDoObjeto = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeNotContainsOnly($tipo, $nomeAtributoBateria, $classeOuObjetoBateria, $ehTipoNativo = NULL, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotCount()</primary></indexterm>
          <entry><literal>assertAttributeNotCount($contagemEsperada, $nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEmpty()</primary></indexterm>
          <entry><literal>assertAttributeNotEmpty($nomeAtributoBateria, $classeOuObjetoBateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEquals()</primary></indexterm>
          <entry><literal>assertAttributeNotEquals($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '', $delta = 0, $profMax = 10, $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeNotInstanceOf($esperado, $nomeAtributo, $classeOuObjeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInternalType()</primary></indexterm>
          <entry><literal>assertAttributeNotInternalType($esperado, $nomeAtributo, $classeOuObjeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotSame()</primary></indexterm>
          <entry><literal>assertAttributeNotSame($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeSame()</primary></indexterm>
          <entry><literal>assertAttributeSame($esperado, $nomeRealAtributo, $classeOuObjetoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasAttribute()</primary></indexterm>
          <entry><literal>assertClassHasAttribute($nomeAtributo, $nomeClasse, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassHasStaticAttribute($nomeAtributo, $nomeClasse, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasAttribute($nomeAtributo, $nomeClasse, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasStaticAttribute($nomeAtributo, $nomeClasse, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContains()</primary></indexterm>
          <entry><literal>assertContains($agulha, $bateria, $mensagem = '', $ignorarCaixa = FALSE, $verificarIdentidadeDoObjeto = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnly()</primary></indexterm>
          <entry><literal>assertContainsOnly($tipo, $bateria, $ehTipoNativo = NULL, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnlyInstancesOf()</primary></indexterm>
          <entry><literal>assertContainsOnlyInstancesOf($nomeclasse, $bateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertCount()</primary></indexterm>
          <entry><literal>assertCount($contagemEsperada, $bateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEmpty()</primary></indexterm>
          <entry><literal>assertEmpty($real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEqualXMLStructure()</primary></indexterm>
          <entry><literal>assertEqualXMLStructure(DOMElement $elementoEsperado, DOMElement $elementoReal, $verificarAtributos = FALSE, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEquals()</primary></indexterm>
          <entry><literal>assertEquals($esperado, $real, $mensagem = '', $delta = 0, $profMax = 10, $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFalse()</primary></indexterm>
          <entry><literal>assertFalse($condicao, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileEquals()</primary></indexterm>
          <entry><literal>assertFileEquals($esperado, $real, $mensagem = '', $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileExists()</primary></indexterm>
          <entry><literal>assertFileExists($nomearquivo, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotEquals()</primary></indexterm>
          <entry><literal>assertFileNotEquals($esperado, $real, $mensagem = '', $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotExists()</primary></indexterm>
          <entry><literal>assertFileNotExists($nomearquivo, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThan()</primary></indexterm>
          <entry><literal>assertGreaterThan($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertGreaterThanOrEqual($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInstanceOf()</primary></indexterm>
          <entry><literal>assertInstanceOf($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInternalType()</primary></indexterm>
          <entry><literal>assertInternalType($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonFileEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileEqualsJsonFile($arquivoEsperado, $arquivoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonFileNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileNotEqualsJsonFile($arquivoEsperado, $arquivoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonFile($arquivoEsperado, $jsonReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonString($jsonEsperado, $jsonReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonFile($arquivoEsperado, $jsonReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonString($jsonEsperado, $jsonReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThan()</primary></indexterm>
          <entry><literal>assertLessThan($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertLessThanOrEqual($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContains()</primary></indexterm>
          <entry><literal>assertNotContains($agulha, $bateria, $mensagem = '', $ignorarCaixa = FALSE, $verificarIdentidadeDoObjeto = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContainsOnly()</primary></indexterm>
          <entry><literal>assertNotContainsOnly($tipo, $bateria, $ehTipoNativo = NULL, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotCount()</primary></indexterm>
          <entry><literal>assertNotCount($contagemEsperada, $bateria, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEmpty()</primary></indexterm>
          <entry><literal>assertNotEmpty($real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEquals()</primary></indexterm>
          <entry><literal>assertNotEquals($esperado, $real, $mensagem = '', $delta = 0, $profMax = 10, $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInstanceOf()</primary></indexterm>
          <entry><literal>assertNotInstanceOf($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInternalType()</primary></indexterm>
          <entry><literal>assertNotInternalType($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotNull()</primary></indexterm>
          <entry><literal>assertNotNull($real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotRegExp()</primary></indexterm>
          <entry><literal>assertNotRegExp($padrao, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSame()</primary></indexterm>
          <entry><literal>assertNotSame($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSameSize()</primary></indexterm>
          <entry><literal>assertNotSameSize($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotTag()</primary></indexterm>
          <entry><literal>assertNotTag($equiparador, $real, $mensagem = '', $ehHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNull()</primary></indexterm>
          <entry><literal>assertNull($real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectHasAttribute($nomeAtributo, $objeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectNotHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectNotHasAttribute($nomeAtributo, $objeto, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertRegExp()</primary></indexterm>
          <entry><literal>assertRegExp($padrao, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSame()</primary></indexterm>
          <entry><literal>assertSame($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSameSize()</primary></indexterm>
          <entry><literal>assertSameSize($esperado, $real, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectCount()</primary></indexterm>
          <entry><literal>assertSelectCount($seletor, $conta, $real, $mensagem = '', $ehHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectEquals()</primary></indexterm>
          <entry><literal>assertSelectEquals($seletor, $conteudo, $conta, $real, $mensagem = '', $ehHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectRegExp()</primary></indexterm>
          <entry><literal>assertSelectRegExp($seletor, $padrao, $conta, $real, $mensagem = '', $ehHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsNotWith()</primary></indexterm>
          <entry><literal>assertStringEndsNotWith($sufixo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsWith()</primary></indexterm>
          <entry><literal>assertStringEndsWith($sufixo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEqualsFile()</primary></indexterm>
          <entry><literal>assertStringEqualsFile($arquivoEsperado, $stringReal, $mensagem = '', $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringMatchesFormat($formato, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringMatchesFormatFile($formatoArquivo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotEqualsFile()</primary></indexterm>
          <entry><literal>assertStringNotEqualsFile($arquivoEsperado, $stringReal, $mensagem = '', $canonicalizar = FALSE, $ignorarCaixa = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormat($formato, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormatFile($formatoArquivo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsNotWith()</primary></indexterm>
          <entry><literal>assertStringStartsNotWith($prefixo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsWith()</primary></indexterm>
          <entry><literal>assertStringStartsWith($prefixo, $string, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTag()</primary></indexterm>
          <entry><literal>assertTag($equiparador, $real, $mensagem = '', $ehHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertThat()</primary></indexterm>
          <entry><literal>assertThat($valor, PHPUnit_Framework_Constraint $restricao, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTrue()</primary></indexterm>
          <entry><literal>assertTrue($condicao, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileEqualsXmlFile($arquivoEsperado, $arquivoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileNotEqualsXmlFile($arquivoEsperado, $arquivoReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlFile($arquivoEsperado, $xmlReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlString($xmlEsperado, $xmlReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlFile($arquivoEsperado, $xmlReal, $mensagem = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlString($xmlEsperado, $xmlReal, $mensagem = '')</literal></entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</appendix>
